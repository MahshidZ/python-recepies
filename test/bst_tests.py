from nose.tools import *
from basic_bst import *

def test_insert():
  my_bst = BST()
  my_bst.insert(3)
  my_bst.insert(5)  
  my_bst.insert(4)
  my_bst.insert(2) 
  my_bst.print_in_order(my_bst.root)

def test_find():
  my_bst = BST()
  my_bst.insert(3)
  my_bst.insert(5)  
  my_bst.insert(4)
  my_bst.insert(2) 
  my_node = Node(-1)
  my_node = my_bst.find(5)
  assert_equal(my_node.data,5)
  assert_equal(my_node.left_child.data, 4)

def test_get_next():
  my_bst = BST()
  my_bst.insert(20)
  my_bst.insert(14)  
  my_bst.insert(18)
  my_bst.insert(15)
  my_bst.insert(19) 
  my_bst.insert(17) 
  my_bst.insert(16) 
  my_bst.insert(23) 
  my_bst.insert(26) 
  my_bst.insert(22) 
  my_bst.insert(21) 
  my_bst.insert(30) 
  my_bst.insert(24) 
  my_bst.insert(25) 
  assert_equal(my_bst.get_next(15), 16)
  assert_equal(my_bst.get_next(16), 17)
  assert_equal(my_bst.get_next(19), 20)

def test_find_smallest_node():
  my_bst = BST()
  my_bst.insert(20)
  my_bst.insert(14)  
  my_bst.insert(18)
  my_bst.insert(15)
  my_bst.insert(19) 
  my_bst.insert(17) 
  my_bst.insert(16) 
  my_bst.insert(23) 
  my_bst.insert(26) 
  my_bst.insert(22) 
  my_bst.insert(21) 
  my_bst.insert(30) 
  my_bst.insert(24) 
  my_bst.insert(25) 
  smallest = Node(-1) 
  smallest = my_bst.find_smallest_node()
  assert_equal(smallest.data, 14)

def test_find_k_smallest():
  my_bst = BST()
  my_bst.insert(20)
  my_bst.insert(14)  
  my_bst.insert(18)
  my_bst.insert(15)
  my_bst.insert(19) 
  my_bst.insert(17) 
  my_bst.insert(16) 
  my_bst.insert(23) 
  my_bst.insert(26) 
  my_bst.insert(22) 
  my_bst.insert(21) 
  my_bst.insert(30) 
  my_bst.insert(24) 
  my_bst.insert(25)  
  smallest_3rd = my_bst.find_k_smallest(3)
  assert_equal(smallest_3rd, 16)
  smallest_9th = my_bst.find_k_smallest(9)
  assert_equal(smallest_9th, 22)

